"""empty message

Revision ID: ce284bd6f84f
Revises: 
Create Date: 2022-01-14 19:30:49.659191

"""
import geoalchemy2  # noqa
from alembic import op
import sqlalchemy as sa  # noqa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "ce284bd6f84f"
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "landmark",
        sa.Column(
            "inserted_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "geometry",
            geoalchemy2.types.Geography(
                spatial_index=False,
                from_text="ST_GeogFromText",
                name="geography",
            ),
            nullable=True,
        ),
        sa.Column(
            "landmark_id", sa.BigInteger(), autoincrement=True, nullable=False
        ),
        sa.Column(
            "landmark_name",
            postgresql.JSON(astext_type=sa.Text()),
            nullable=False,
        ),
        sa.Column("country", sa.String(), nullable=True),
        sa.Column("city", sa.String(), nullable=True),
        sa.Column("cover_image", sa.String(), nullable=True),
        sa.Column(
            "description",
            postgresql.JSON(astext_type=sa.Text()),
            nullable=True,
        ),
        sa.Column(
            "extra", postgresql.JSON(astext_type=sa.Text()), nullable=True
        ),
        sa.Column("descriptors", postgresql.ARRAY(sa.Float()), nullable=True),
        sa.PrimaryKeyConstraint("landmark_id"),
        sa.UniqueConstraint("landmark_id"),
        schema="vision_sources",
    )
    op.create_table(
        "artwork",
        sa.Column(
            "inserted_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "geometry",
            geoalchemy2.types.Geography(
                spatial_index=False,
                from_text="ST_GeogFromText",
                name="geography",
            ),
            nullable=True,
        ),
        sa.Column(
            "artwork_id", sa.BigInteger(), autoincrement=True, nullable=False
        ),
        sa.Column(
            "artwork_name",
            postgresql.JSON(astext_type=sa.Text()),
            nullable=False,
        ),
        sa.Column("landmark_id", sa.BigInteger(), nullable=False),
        sa.Column("cover_image", sa.String(), nullable=True),
        sa.Column(
            "description",
            postgresql.JSON(astext_type=sa.Text()),
            nullable=True,
        ),
        sa.Column(
            "extra", postgresql.JSON(astext_type=sa.Text()), nullable=True
        ),
        sa.Column("descriptors", postgresql.ARRAY(sa.Float()), nullable=True),
        sa.ForeignKeyConstraint(
            ["landmark_id"],
            ["vision_sources.landmark.landmark_id"],
            onupdate="CASCADE",
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("artwork_id"),
        sa.UniqueConstraint("artwork_id"),
        schema="vision_sources",
    )
    op.create_index(
        op.f("ix_vision_sources_artwork_landmark_id"),
        "artwork",
        ["landmark_id"],
        unique=False,
        schema="vision_sources",
    )
    op.create_table(
        "series",
        sa.Column(
            "inserted_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "series_id", sa.BigInteger(), autoincrement=True, nullable=False
        ),
        sa.Column("series_name", sa.String(), nullable=False),
        sa.Column("landmark_id", sa.BigInteger(), nullable=False),
        sa.Column("lang", sa.String(), nullable=False),
        sa.Column("cover_image", sa.String(), nullable=True),
        sa.Column("description", sa.String(), nullable=False),
        sa.Column("price", sa.Float(), nullable=True),
        sa.ForeignKeyConstraint(
            ["landmark_id"],
            ["vision_sources.landmark.landmark_id"],
            onupdate="CASCADE",
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("series_id"),
        sa.UniqueConstraint("series_id"),
        schema="vision_sources",
    )
    op.create_index(
        op.f("ix_vision_sources_series_landmark_id"),
        "series",
        ["landmark_id"],
        unique=False,
        schema="vision_sources",
    )
    op.create_table(
        "introduction",
        sa.Column(
            "inserted_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "introduction_id",
            sa.BigInteger(),
            autoincrement=True,
            nullable=False,
        ),
        sa.Column("introduction_name", sa.String(), nullable=False),
        sa.Column("series_id", sa.BigInteger(), nullable=False),
        sa.Column("artwork_id", sa.BigInteger(), nullable=False),
        sa.Column("lang", sa.String(), nullable=False),
        sa.Column(
            "introduction",
            postgresql.JSON(astext_type=sa.Text()),
            nullable=True,
        ),
        sa.ForeignKeyConstraint(
            ["artwork_id"],
            ["vision_sources.artwork.artwork_id"],
            onupdate="CASCADE",
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(
            ["series_id"],
            ["vision_sources.series.series_id"],
            onupdate="CASCADE",
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("introduction_id"),
        sa.UniqueConstraint("introduction_id"),
        schema="vision_sources",
    )
    op.create_index(
        op.f("ix_vision_sources_introduction_artwork_id"),
        "introduction",
        ["artwork_id"],
        unique=False,
        schema="vision_sources",
    )
    op.create_index(
        op.f("ix_vision_sources_introduction_series_id"),
        "introduction",
        ["series_id"],
        unique=False,
        schema="vision_sources",
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(
        op.f("ix_vision_sources_introduction_series_id"),
        table_name="introduction",
        schema="vision_sources",
    )
    op.drop_index(
        op.f("ix_vision_sources_introduction_artwork_id"),
        table_name="introduction",
        schema="vision_sources",
    )
    op.drop_table("introduction", schema="vision_sources")
    op.drop_index(
        op.f("ix_vision_sources_series_landmark_id"),
        table_name="series",
        schema="vision_sources",
    )
    op.drop_table("series", schema="vision_sources")
    op.drop_index(
        op.f("ix_vision_sources_artwork_landmark_id"),
        table_name="artwork",
        schema="vision_sources",
    )
    op.drop_table("artwork", schema="vision_sources")
    op.drop_table("landmark", schema="vision_sources")
    # ### end Alembic commands ###
